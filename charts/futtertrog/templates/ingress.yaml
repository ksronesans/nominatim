{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "futtertrog.name" . }}
  labels:
  {{- include "futtertrog.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.ingress.certManager }}
    kubernetes.io/tls-acme: "true"
    {{- end }}
  {{- if .Values.ingress.annotations }}
  {{- include "common.tplvalues.render" (dict "value" .Values.ingress.annotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  tls:
    {{- if .Values.ingress.tls }}
    - hosts:
      - {{ .Values.ingress.hostname | quote }}
      {{- if .Values.ingress.additionalHosts }}
      {{- range $host := .Values.ingress.additionalHosts }}
      - {{ template "hostname" $host }}
      {{- end -}}
      {{- end }}
      secretName: {{ printf "%s-tls" .Values.ingress.hostname }}
  {{- end }}
  rules:
    - host: {{ template "hostname" .Values.ingress.hostname }}
      http:
        &httpRule
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "futtertrog.fullname" . }}
                port:
                  name: http
    {{- if .Values.ingress.additionalHosts }}
    {{- range $host := .Values.ingress.additionalHosts }}
    - host: {{ template "hostname" $host }}
      http:
        <<: *httpRule
    {{- end -}}
    {{- end -}}
  {{- end }}